Sub 按照指定字段拆分工作表()
    a = Time
    Call 排序
    Dim myRange As Variant
    Dim myArray
    Dim to_break_range As Range
    Dim to_break_title As String
    Dim to_break_column As Integer
    Dim ActivePath As String
    ActivePath = ActiveWorkbook.Path
    
    'myRange = Application.InputBox(prompt:="请用鼠标点击标题行：", Type:=8)
    myRange = Rows(1)
    myArray = WorksheetFunction.Transpose(myRange)
    'Set to_break_range = Application.InputBox(prompt:="请用鼠标点击要拆分的字段，必须是第一行，且为1个单元格", Type:=8)
    Set to_break_range = Cells(1, 5)
    '需要拆分的字段的名字，用于后续写SQL代码用
    to_break_title = to_break_range.Value
    '目标数据总列数
    to_break_column = to_break_range.Column
    
    '设置部门列
    Set depart_range = Cells(1, 1)
    depart_title = depart_range.Value
    depart_column = depart_range.Column
    
    Application.ScreenUpdating = False
    Application.DisplayAlerts = False
    
    Dim j&, i&, max_row&, to_break_array, num&
    Dim d, k, k2
    '删除其他sheet
    '    For i = Sheets.Count To 1 Step -1
    '        If Sheets(i).Name <> "数据源" Then
    '            Sheets(i).Delete
    '        End If
    '    Next i
    
    'Debug.Print to_break_column
    Set d = CreateObject("Scripting.Dictionary")
    max_row = Worksheets("数据源").UsedRange.Rows.Count
    to_break_array = Worksheets("数据源").Range(Cells(2, to_break_column), Cells(max_row, to_break_column))
    Set d2 = CreateObject("Scripting.Dictionary")
    depart_array = Worksheets("数据源").Range(Cells(2, depart_column), Cells(max_row, depart_column))
    
    '除标题外的目标数据，每一格赋值到字典中
    For i = 1 To UBound(to_break_array)
        If Worksheets("数据源").Cells(i + 1, 3).Value = "否" Then
            d(to_break_array(i, 1)) = ""
        End If
    Next
    '把字典d的key赋给k，k作为字典的keys有剔重作用，k(i)就是该数组的所有不重复值
    k = d.keys
    
    '除标题外的目标数据，每一格赋值到字典中
    For i = 1 To UBound(depart_array)
        d2(depart_array(i, 1)) = ""
    Next
    '把字典d的key赋给k，k作为字典的keys有剔重作用，k(i)就是该数组的所有不重复值
    k2 = d2.keys
    
    For j = 0 To UBound(k2)
        '新建工作簿
        Workbooks.Add
        
        '''''''''''''''''
        '先拆分非分销SKU
        '''''''''''''''''
        
        For i = 0 To UBound(k)
            '设置SQL连接
            Set conn = CreateObject("adodb.connection")
            Select Case Application.Version * 1 '设置连接字符串,根据版本创建连接
                Case Is <= 11
                    conn.Open "Provider=Microsoft.Jet.Oledb.4.0;Extended Properties=excel 8.0;Data source=" & ThisWorkbook.FullName
                Case Is >= 12
                    conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & ThisWorkbook.FullName & ";Extended Properties=""Excel 12.0;HDR=YES"";"""
            End Select
            
            Sql = "select * from [数据源$] where " & to_break_title & " = '" & k(i) & "'"
            Sql = Sql & " and " & depart_title & " = '" & k2(j) & "'"
            Sql = Sql & " and [数据源$].是否分销 = '否'"
            
            Set result = conn.Execute(Sql)
            If result.bof And result.EOF Then
                Call macro
            Else
                '在现有所有sheet之后增加一个sheet,after的用法
                Worksheets.Add after:=Sheets(Sheets.Count)
                
                With ActiveSheet
                    '每个key，即每个产品代码作为sheet名字
                    .Name = k(i)
                    '首行标题赋值
                    For num = 1 To UBound(myArray)
                        .Cells(1, num) = myArray(num, 1)
                    Next num
                    '从第二行开始把SQL查询结果粘贴
                    .Range("A2").CopyFromRecordset conn.Execute(Sql)
                End With
                Call 转置粘贴
            End If
            conn.Close
            Set conn = Nothing
        Next i
        
        
        '''''''''''''''''
        '再拆分分销SKU
        '''''''''''''''''
        '设置SQL连接
        Set conn = CreateObject("adodb.connection")
        Select Case Application.Version * 1 '设置连接字符串,根据版本创建连接
            Case Is <= 11
                conn.Open "Provider=Microsoft.Jet.Oledb.4.0;Extended Properties=excel 8.0;Data source=" & ThisWorkbook.FullName
            Case Is >= 12
                conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & ThisWorkbook.FullName & ";Extended Properties=""Excel 12.0;HDR=YES"";"""
        End Select
        
        Sql = "select * from [数据源$] where [数据源$].是否分销 = '是'"
        Sql = Sql & " and " & depart_title & " = '" & k2(j) & "'"
        
        Set result = conn.Execute(Sql)
        If result.bof And result.EOF Then
            Call macro
        Else
            '在现有所有sheet之后增加一个sheet,after的用法
            Worksheets.Add after:=Sheets(Sheets.Count)
            With ActiveSheet
                '每个key，即每个产品代码作为sheet名字
                .Name = "OTTO分销"
                '首行标题赋值
                For num = 1 To UBound(myArray)
                    .Cells(1, num) = myArray(num, 1)
                Next num
                '从第二行开始把SQL查询结果粘贴
                .Range("A2").CopyFromRecordset conn.Execute(Sql)
            End With
            Call 转置粘贴
        End If
        conn.Close
        Set conn = Nothing
        
        '保存工作簿
        Sheets("Sheet1").Delete
        ActiveWorkbook.SaveAs Filename:=ActivePath & "\" & k2(j) & ".xlsx", _
            FileFormat:=xlOpenXMLWorkbook, CreateBackup:=False
        ActiveWindow.Close
    Next j
    Application.DisplayAlerts = True
    Application.ScreenUpdating = True
    Dim b
    b = Time - a
    MsgBox " 已经拆分完成" & Chr(13) & "一共用时" & Format(b, "mm:ss") & "秒"
    
End Sub
Sub 转置粘贴()
    Dim copy_content()
    copyRange = ActiveSheet.UsedRange
    copy_content = WorksheetFunction.Transpose(copyRange)
    ActiveSheet.UsedRange.ClearContents
    ActiveSheet.Range("A2").Resize(UBound(copy_content), UBound(copy_content, 2)) = copy_content
    ActiveSheet.Rows("2:4").Delete
    ActiveSheet.Range("B10:XFD28").NumberFormatLocal = "0.00%"
    For Each rn In ActiveSheet.Range("a2", "a28")
        rn.Interior.Color = RGB(172, 185, 202)
    Next
End Sub
Sub 排序()
    Dim oRead_Excel_Conn As Object
    Dim sExcel_Select As String
    Application.ScreenUpdating = False
    '设置SQL连接
    Set oRead_Excel_Conn = CreateObject("adodb.connection")
    Select Case Application.Version * 1 '设置连接字符串,根据版本创建连接
        Case Is <= 11
            oRead_Excel_Conn.Open "Provider=Microsoft.Jet.Oledb.4.0;Extended Properties=excel 8.0;Data source=" & ThisWorkbook.FullName
        Case Is >= 12
            oRead_Excel_Conn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & ThisWorkbook.FullName & ";Extended Properties=""Excel 12.0;HDR=YES"";"""
    End Select
    sExcel_Select = "Select * From [数据源$] Order By [产品代码],[站点],[日期]"
    With Sheets("数据源")
        '.[A1].CurrentRegion.Offset(1).ClearContents
        .[A2].CopyFromRecordset oRead_Excel_Conn.Execute(sExcel_Select)
    End With
    oRead_Excel_Conn.Close
    Set oRead_Excel_Conn = Nothing
    Application.ScreenUpdating = True
End Sub
Sub macro()
    
End Sub

